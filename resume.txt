                                 Dan Kubb
                          33699 Grewall Crescent
                           Mission, BC, V2V 7B7
                                  Canada

                               dan@kubb.ca
                            +1 (604) 855-2194

Summary
-------

* Proven record of delivering well-tested software that exceeds
  expectations.
* Very comfortable communicating with all levels of an organization and
  explain technical concepts using straightforward language.
* Understands business and marketing, and has an especially deep
  understanding of internet marketing.
* Enjoys teaching and mentoring and has directly managed teams of up to
  15 developers.
* Strong technical background with over 20 years of experience
  developing web applications.
* Former Lead for DataMapper ORM open-source project, which was a direct
  competitor to ActiveRecord (a part of Ruby on Rails), is used by hundreds
  of companies and has dozens of contributors.


Skills
------

Languages         -- Ruby, Haskell, SQL, Perl
Databases         -- MySQL, PostgreSQL, SQLite
Operating Systems -- Linux, OS X, Windows


Experience
----------


Software Developer
Bloomcrush
April 2011 - Present (9 years)

* Led a team of developers on various Ruby on Rails projects for clients.

* Developed ecommerce application based on Spree, and later rewritten to
  handle 50M+ in yearly sales.

* Worked as part of a team to build a CI/CD system based on BuildKite that
  performs over one work-hour of verification in parallel tasks, bringing
  the total build time down to under 2 minutes.


Freelance Software Developer
May 2001 — Present (19 years)

* Worked with dozens of customers, automating and streamlining their
  internal business and marketing processes.

* Developed custom ecommerce applications handling over 1M in yearly
  sales.

* Integrated back-end systems that were not designed to work together to
  allow simpler administration and increase sales.

* In one case, developed a system to help manage fulfillment of
  physically shipped products. Reduced time to manage daily orders
  from 4 hours to 10 minutes a day, and eliminated many costly mistakes
  caused by the formerly manual process.


Software Developer
VideoJuicer
October 2010 - May 2011 (8 months)

* Worked on a team that managed the pokerstars.tv video hosting website. This
  included video processing, a CMS and content distribution that handled
  extremely high volumes of traffic.

* Converted existing pokerstars.tv site to be mobile friendly.


Software Developer
Lypp
2007 — 2008 (1 year)

* Integrated Voice Conferencing system with Ruby on Rails application.
  System allows conferences to be scheduled with attendees, and the
  system would dial out to all attendees and pull them into a conference
  call.

* Mentored small team of developers and designers.

* Worked directly with designers and project managers to design easy to
  use interface to allow call scheduling.

* Developed REST API to allow other applications to integrate conference
  calling systems. API is compatible with ActiveResource allowing Ruby
  on Rails applications to easily integrate with the service.


Lead Software Developer
The Internet Marketing Center
March 1999 — June 2004 (5 years 4 months)

* Developed dozens of in-house applications to streamline business and
  increase sales.

* Built ecommerce platform that formed the basis for all company systems
  and continuously refined while the company grew from 4 employees to
  over 50, and 10M a year in revenue online.

* Mentored and managed software developers on multiple simultaneous
  projects. Team size would fluctuate depending on the project, but I
  have managed up to 15 developers at one time.

* Developed affiliate program used by 90,000+ affiliates, one of the
  largest on the internet after Amazon.com.

* Repackaged in-house affiliate program as commercial system called
  AssocTRAC. Sold several thousand copies for well over 1M in revenue
  for about 4 man-months of work.

* Rebuilt eBookPro authentication system to handle extremely large
  volumes of traffic. Stability was a primary concern, so it was built
  using Test Driven Development and refactored into clean single-purpose
  components.
